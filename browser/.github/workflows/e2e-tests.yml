name: E2E Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'browser/**'
      - '.github/workflows/e2e-tests.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'browser/**'

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: browser/package-lock.json
    
    # Install Chrome/Chromium for headless testing
    - name: Setup Chrome
      uses: browser-actions/setup-chrome@v1
      with:
        chrome-version: stable
    
    # Alternative: Use Puppeteer's bundled Chromium
    # - name: Install Puppeteer Chromium
    #   run: npx puppeteer browsers install chrome
    
    - name: Install dependencies
      working-directory: ./browser
      run: npm ci
    
    - name: Build extension
      working-directory: ./browser
      run: npm run build
    
    - name: Run Pure Server E2E Test (headless)
      working-directory: ./browser
      run: npx tsx e2e/pure_server_e2e_test.ts
      env:
        CI: true
        HEADLESS: true
    
    - name: Run Quick Test Suite (headless)
      working-directory: ./browser
      run: npx tsx e2e/quick_test_all.ts
      continue-on-error: true # Don't fail the whole workflow if this fails
    
    - name: Run Navigation E2E Tests (headless)
      working-directory: ./browser
      run: timeout 5m npx tsx e2e/navigation_e2e_tests.ts || true
      continue-on-error: true
    
    # Upload test results as artifacts
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: e2e-test-results-${{ matrix.node-version }}
        path: |
          browser/e2e/test_results.json
          browser/e2e/*.log
        retention-days: 7

  # Alternative job using Docker with pre-installed Chrome
  e2e-tests-docker:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.40.0-focal
      # This image includes Chrome, Chromium, Firefox, and WebKit
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Node dependencies
      working-directory: ./browser
      run: |
        npm ci
        npm run build
    
    - name: Run E2E tests in container
      working-directory: ./browser
      run: |
        npx tsx e2e/pure_server_e2e_test.ts
      env:
        CI: true
        HEADLESS: true